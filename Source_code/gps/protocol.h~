
#ifndef PROTOCOL_H_
#define PROTOCOL_H_

#include "gps_helper.h"

#ifndef RECV_BUFFER_SIZE
#define RECV_BUFFER_SIZE 512

#define SAT_INFO_MAX_SATELLITES  20
#endif


class PROTOCOL : public GPS_Helper
{
	enum nmea_decode_state_t {
		NMEA_DECODE_UNINIT,
		NMEA_DECODE_GOT_SYNC1,
		NMEA_DECODE_GOT_ASTERIKS,
		NMEA_DECODE_GOT_FIRST_CS_BYTE
	};

	int                    _fd;
	struct satellite_info_s *_satellite_info;
	struct vehicle_gps_position_s *_gps_position;
	int ashtechlog_fd;

	nmea_decode_state_t   _decode_state;
	uint8_t               _rx_buffer[RECV_BUFFER_SIZE];
	uint16_t              _rx_buffer_bytes;
	bool                  _parse_error; 		/** parse error flag */
	char                 *_parse_pos; 		/** parse position */

	bool	_gsv_in_progress;			/**< Indicates that gsv data parsing is in progress */
	/* int     _satellites_count; 			**< Number of satellites info parsed. */
	uint8_t count;					/**< Number of satellites in satellite info */
	uint8_t svid[SAT_INFO_MAX_SATELLITES]; 		/**< Space vehicle ID [1..255], see scheme below  */
	uint8_t used[SAT_INFO_MAX_SATELLITES];		/**< 0: Satellite not used, 1: used for navigation */
	uint8_t elevation[SAT_INFO_MAX_SATELLITES];	/**< Elevation (0: right on top of receiver, 90: on the horizon) of satellite */
	uint8_t azimuth[SAT_INFO_MAX_SATELLITES];	/**< Direction of satellite, 0: 0 deg, 255: 360 deg. */
	uint8_t snr[SAT_INFO_MAX_SATELLITES];		/**< dBHz, Signal to noise ratio of satellite C/N0, range 0..99, zero when not tracking this satellite. */

public:
	PROTOCOL(const int &fd, struct vehicle_gps_position_s *gps_position, struct satellite_info_s *satellite_info);
	~PROTOCOL();
	int             receive(unsigned timeout);
	int             configure(unsigned &baudrate);
	void            decode_init(void);
	int             handle_message(int len);
	int             parse_char(uint8_t b);
	/** Read int ASHTECH parameter */
	int32_t         read_int();
	/** Read float ASHTECH parameter */
	double       read_float();
	/** Read char ASHTECH parameter */
	char            read_char();

};

#endif /* ASHTECH_H_ */
